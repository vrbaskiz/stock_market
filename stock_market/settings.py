"""
Django settings for stock_market project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG', 'False').lower() == 'true'

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    #'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework', # Django REST Framework
    'drf_spectacular', # OpenAPI schema generation and docs
    'stock_analyzer_app.apps.StockAnalyzerAppConfig'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'stock_market.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.template.context_processors.debug',
            ],
        },
    },
]

WSGI_APPLICATION = 'stock_market.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
# DATABASES = REMOVED SINCE WE DONT NEED IT


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '[%(asctime)s] [%(levelname)s] [%(module)s:%(lineno)d] %(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S',
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'DEBUG',
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
        'rest_framework': {
            'handlers': ['console'],
            'level': 'WARNING',  # Suppress DRF logs
            'propagate': False,
        },
        'stock_market': {
            'handlers': ['console'],
            'level': 'DEBUG',  # Show only your app's logs
            'propagate': False,
        },
    },
}

# Django REST Framework settings: Allow any access without authentication
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        # No authentication classes, effectively allowing anonymous requests
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.AllowAny', # Explicitly allows access for all
    ),
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema', # Link DRF with drf-spectacular
}

# drf-spectacular settings
SPECTACULAR_SETTINGS = {
    'TITLE': 'Market Data & Insights API',
    'DESCRIPTION': 'API to access real-time market data, with analysis for significant price changes.',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
    'AUTO_SCHEMA_EXAMPLES_JSON_SCHEMA': False,
}

# Custom settings for the app
MAX_STORE_SIZE = 1000  # Maximum size of the in-memory data store

# Define stocks to analyze
STOCKS_TO_ANALYZE = ["AMZN", "GOOGL", "MSFT"]

# Define the threshold for significant price changes
PRICE_CHANGE_THRESHOLD = 0.1

FINNHUB_CONFIG = {
    # !!! IMPORTANT: Replace 'YOUR_FINNHUB_API_KEY' with your actual API key !!!
    'API_KEY': os.environ.get('FINHUB_API_KEY'), # REPLACE THIS!
    'WEBSOCKET_URL': 'wss://ws.finnhub.io', # Base URL without token
}